layout (location = 0) in vec3 v_Position;
layout (location = 1) in vec3 v_Normal;
layout (location = 4) in ivec4 v_JointIds;
layout (location = 5) in vec4 v_JointWeights;

uniform mat4 u_ModelMatrix;
uniform mat4 u_ProjViewMatrix;

uniform mat4 u_JointTransforms[JOINT_COUNT];

out vec3 f_Position;
out vec3 f_Normal;

void main()
{
    vec4 localPosition = vec4(0.0);
    vec4 normal = vec4(0.0);

    for (int i = 0; i < 4; i++)
    {
        mat4 jointTransform = u_JointTransforms[v_JointIds[i]];
        vec4 posePosition = jointTransform * vec4(v_Position, 1.0);
        localPosition += posePosition * v_JointWeights[i];

        vec4 worldNormal = jointTransform * vec4(v_Normal, 0.0);
        normal += worldNormal * v_JointWeights[i];
    }

    gl_Position = u_ProjViewMatrix * u_ModelMatrix * localPosition;
    f_Position = vec3(u_ModelMatrix * localPosition);
    f_Normal = normalize(normal.xyz);
}
